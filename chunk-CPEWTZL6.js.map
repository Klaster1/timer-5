{
  "version": 3,
  "sources": ["src/app/screen-task/button-session-actions/button-session-actions.component.ts", "src/app/screen-task/button-session-actions/button-session-actions.component.html", "src/app/screen-task/sticky.directive.ts", "src/app/screen-task/type-safe-virtual-for.directive.ts", "src/app/screen-task/screen-task.component.ts", "src/app/screen-task/screen-task.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, inject, input } from '@angular/core';\r\nimport { MatIconButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger } from '@angular/material/menu';\r\nimport { RouterLink } from '@angular/router';\r\nimport { encodeFilterParams } from '@app/domain/router';\r\nimport { Session, Task, getSessionId } from '@app/domain/task';\r\nimport { AppStore } from '@app/services/state';\r\n\r\n@Component({\r\n  templateUrl: './button-session-actions.component.html',\r\n  styleUrls: ['./button-session-actions.component.scss'],\r\n  selector: 'button-session-actions',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [MatMenu, MatMenuContent, MatMenuItem, MatMenuTrigger, MatIconButton, MatIcon, RouterLink],\r\n})\r\nexport class ButtonSessionActionsComponent {\r\n  private store = inject(AppStore);\r\n\r\n  public task = input.required<Task>();\r\n  public session = input.required<Session>();\r\n\r\n  edit() {\r\n    this.store.editSession(this.task().id, getSessionId(this.session()));\r\n  }\r\n  remove() {\r\n    this.store.deleteSession(this.task().id, getSessionId(this.session()));\r\n  }\r\n  get skipBeforeParams() {\r\n    return encodeFilterParams({ from: new Date(this.session().start) });\r\n  }\r\n  get skipAfterParams() {\r\n    return encodeFilterParams({ to: new Date(this.session()?.end ?? new Date()) });\r\n  }\r\n}\r\n", "<button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n  <mat-icon svgIcon=\"more_vert\"></mat-icon>\r\n</button>\r\n<mat-menu #menu=\"matMenu\">\r\n  <ng-template matMenuContent>\r\n    <button mat-menu-item type=\"button\" (click)=\"edit()\" data-e2e=\"menu-session__button-edit\">Edit</button>\r\n    <button mat-menu-item type=\"button\" (click)=\"remove()\" data-e2e=\"menu-session__button-delete\">Delete</button>\r\n    <a\r\n      mat-menu-item\r\n      type=\"button\"\r\n      routerLink=\".\"\r\n      [queryParams]=\"skipAfterParams\"\r\n      queryParamsHandling=\"merge\"\r\n      data-e2e=\"menu-session__button-skip-after\"\r\n      >Skip everything after</a\r\n    >\r\n    <a\r\n      mat-menu-item\r\n      type=\"button\"\r\n      routerLink=\".\"\r\n      [queryParams]=\"skipBeforeParams\"\r\n      queryParamsHandling=\"merge\"\r\n      data-e2e=\"menu-session__button-skip-before\"\r\n      >Skip everything before</a\r\n    >\r\n  </ng-template>\r\n</mat-menu>\r\n", "import { DestroyRef, Directive, ElementRef, afterNextRender, inject } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[sticky]',\r\n  standalone: true,\r\n})\r\nexport class VirtualScrollStickyTable {\r\n  private elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  constructor() {\r\n    afterNextRender(() => {\r\n      const thead = this.elementRef.nativeElement.querySelector('thead');\r\n      const tfoot = this.elementRef.nativeElement.querySelector('tfoot');\r\n      const parent = this.elementRef.nativeElement.parentElement;\r\n\r\n      if (!parent || !thead || !tfoot) return;\r\n\r\n      thead.style.position = 'sticky';\r\n      thead.style.zIndex = '10';\r\n      tfoot.style.position = 'sticky';\r\n      tfoot.style.zIndex = '10';\r\n\r\n      const observer = new MutationObserver((changes) => {\r\n        const { transform } = (changes.at(0)?.target as HTMLElement).style;\r\n        const transformPx = transform.replace('translateY(', '').replace('px)', '');\r\n        const theadTop = `-${transformPx}px`;\r\n        const tfootBottom = `${transformPx}px`;\r\n        if (thead.style.top !== theadTop) thead.style.top = theadTop;\r\n        if (tfoot.style.bottom !== tfootBottom) tfoot.style.bottom = tfootBottom;\r\n      });\r\n      observer.observe(parent, { attributes: true, attributeFilter: ['style'] });\r\n      this.destroyRef.onDestroy(() => observer.disconnect());\r\n    });\r\n  }\r\n}\r\n", "import { CdkVirtualForOfContext } from '@angular/cdk/scrolling';\r\nimport { Directive, input } from '@angular/core';\r\n\r\n// https://github.com/angular/components/issues/26609\r\n@Directive({\r\n  selector: '[cdkVirtualFor]',\r\n  standalone: true,\r\n})\r\nexport class TypeSafeCdkVirtualForDirective<T> {\r\n  cdkVirtualForTypes = input<T[]>();\r\n\r\n  static ngTemplateContextGuard<T>(\r\n    _dir: TypeSafeCdkVirtualForDirective<T>,\r\n    ctx: unknown,\r\n  ): ctx is CdkVirtualForOfContext<T> {\r\n    return true;\r\n  }\r\n}\r\n", "import { CdkDrag, CdkDragPlaceholder, CdkDropList } from '@angular/cdk/drag-drop';\r\nimport { CdkVirtualScrollViewport, ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { AsyncPipe, DatePipe, NgStyle } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  DestroyRef,\r\n  afterNextRender,\r\n  computed,\r\n  effect,\r\n  inject,\r\n  viewChild,\r\n} from '@angular/core';\r\nimport { MatFabButton, MatIconButton } from '@angular/material/button';\r\nimport { MatIcon } from '@angular/material/icon';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltip } from '@angular/material/tooltip';\r\nimport { RouterLink } from '@angular/router';\r\nimport { ButtonTaskActionsComponent } from '@app/button-task-actions/button-task-actions.component';\r\nimport {\r\n  KEYS_DELETE_TASK,\r\n  KEYS_MARK_ACTIVE,\r\n  KEYS_MARK_FINISHED,\r\n  KEYS_RENAME,\r\n  KEYS_START_STOP,\r\n  hotkey,\r\n} from '@app/domain/hotkeys';\r\nimport { Task, TaskState, isTaskRunning, sessionDuration } from '@app/domain/task';\r\nimport { FormatDurationPipe } from '@app/pipes/format-duration.pipe';\r\nimport { MapPipe } from '@app/pipes/map.pipe';\r\nimport { TaskDurationPipe } from '@app/pipes/task-duration.pipe';\r\nimport { TaskStateIconPipe } from '@app/pipes/task-state-icon.pipe';\r\nimport { AppStore } from '@app/services/state';\r\nimport { HotkeysService } from 'angular2-hotkeys';\r\nimport { ButtonSessionActionsComponent } from './button-session-actions/button-session-actions.component';\r\nimport { VirtualScrollStickyTable } from './sticky.directive';\r\nimport { TypeSafeCdkVirtualForDirective } from './type-safe-virtual-for.directive';\r\n\r\n@Component({\r\n  selector: 'screen-task',\r\n  templateUrl: './screen-task.component.html',\r\n  styleUrls: ['./screen-task.component.scss', './mat-table.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    TaskStateIconPipe,\r\n    MatToolbarModule,\r\n    MatIcon,\r\n    MatTooltip,\r\n    FormatDurationPipe,\r\n    TaskDurationPipe,\r\n    ButtonTaskActionsComponent,\r\n    ButtonSessionActionsComponent,\r\n    MapPipe,\r\n    CdkDrag,\r\n    CdkDragPlaceholder,\r\n    CdkDropList,\r\n    AsyncPipe,\r\n    DatePipe,\r\n    RouterLink,\r\n    MatIconButton,\r\n    MatFabButton,\r\n    ScrollingModule,\r\n    NgStyle,\r\n    VirtualScrollStickyTable,\r\n    TypeSafeCdkVirtualForDirective,\r\n  ],\r\n})\r\nexport default class ScreenTaskComponent {\r\n  public store = inject(AppStore);\r\n  private keys = inject<HotkeysService>(HotkeysService);\r\n  private destroyRef = inject(DestroyRef);\r\n\r\n  taskIsInProgress = computed(() => isTaskRunning(this.store.currentTask()));\r\n  viewport = viewChild(CdkVirtualScrollViewport);\r\n\r\n  sessionDuration = sessionDuration;\r\n  hotkeys = [\r\n    hotkey(KEYS_START_STOP, 'Start/stop task', (e) => {\r\n      const task = this.store.currentTask();\r\n      const inProgress = this.taskIsInProgress();\r\n      if (!task) return;\r\n      if (inProgress) {\r\n        this.stop(task.id);\r\n      } else {\r\n        this.start(task.id);\r\n      }\r\n    }),\r\n    hotkey(KEYS_MARK_FINISHED, `Mark as finished`, (e) => {\r\n      const task = this.store.currentTask();\r\n      if (task) this.store.updateTaskState(task.id, TaskState.finished);\r\n    }),\r\n    hotkey(KEYS_MARK_ACTIVE, `Mark as active`, (e) => {\r\n      const task = this.store.currentTask();\r\n      if (task) this.store.updateTaskState(task.id, TaskState.active);\r\n    }),\r\n    hotkey(KEYS_RENAME, 'Rename task', () => {\r\n      const task = this.store.currentTask();\r\n      if (task) this.store.renameTask(task.id);\r\n    }),\r\n    hotkey(KEYS_DELETE_TASK, 'Delete task', () => {\r\n      const task = this.store.currentTask();\r\n      if (task) this.store.deleteTask(task.id);\r\n    }),\r\n  ];\r\n  displayedColumns = ['start', 'end', 'duration', 'action'];\r\n\r\n  constructor() {\r\n    this.destroyRef.onDestroy(() => {\r\n      this.keys.remove(this.hotkeys);\r\n    });\r\n    afterNextRender(() => {\r\n      this.keys.add(this.hotkeys);\r\n    });\r\n    effect(() => {\r\n      this.store.currentTaskId();\r\n      this.viewport()?.scrollToIndex(0);\r\n    });\r\n  }\r\n  start(taskId: string) {\r\n    this.store.startTask(taskId, Date.now());\r\n  }\r\n  stop(taskId: string) {\r\n    this.store.stopTask(taskId, Date.now());\r\n  }\r\n  deleteTask(task: Task) {\r\n    this.store.deleteTask(task.id);\r\n  }\r\n}\r\n", "@if (store.currentTask(); as task) {\r\n  <mat-toolbar>\r\n    <button routerLink=\"./..\" queryParamsHandling=\"merge\" mat-icon-button>\r\n      <mat-icon svgIcon=\"arrow_back\"></mat-icon>\r\n    </button>\r\n    <h2>\r\n      <mat-icon [svgIcon]=\"task | taskStateIcon\" class=\"fix-icon-color\" data-e2e=\"screen-task__state-icon\"></mat-icon\r\n      ><span data-e2e=\"screen-task__name\">{{ task.name }}</span>\r\n    </h2>\r\n    <button-task-actions [task]=\"task\"></button-task-actions>\r\n  </mat-toolbar>\r\n  <cdk-virtual-scroll-viewport [itemSize]=\"52\" #viewport minBufferPx=\"200\" maxBufferPx=\"2000\">\r\n    <table class=\"mat-mdc-table\" cdkDropList [cdkDropListSortingDisabled]=\"true\" cdkVirtualScrollingElement sticky>\r\n      <thead [ngStyle]=\"{ top: '-' + viewport.getOffsetToRenderedContentStart() + 'px' }\">\r\n        <tr class=\"mat-mdc-header-row mdc-data-table__header-row\">\r\n          <th class=\"header-start mat-mdc-header-cell mdc-data-table__header-cell\">Start</th>\r\n          <th class=\"header-end mat-mdc-header-cell mdc-data-table__header-cell\">End</th>\r\n          <th class=\"header-duration mat-mdc-header-cell mdc-data-table__header-cell\">Duration</th>\r\n          <th class=\"header-action mat-mdc-header-cell mdc-data-table__header-cell\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <ng-container *cdkVirtualFor=\"let item of task.sessions; types: task.sessions\">\r\n          <tr\r\n            class=\"mat-mdc-row mdc-data-table__row\"\r\n            data-e2e=\"screen-task__session-row\"\r\n            cdkDrag\r\n            [cdkDragData]=\"[item, task.id]\"\r\n          >\r\n            <div *cdkDragPlaceholder></div>\r\n            <td class=\"mat-mdc-cell mdc-data-table__cell\" data-e2e=\"screen-task__session-start\">\r\n              {{ item.start | date: 'yyyy-MM-dd H:mm' }}\r\n            </td>\r\n            <td class=\"mat-mdc-cell mdc-data-table__cell\" data-e2e=\"screen-task__session-end\">\r\n              {{ item.end | date: 'yyyy-MM-dd H:mm' }}\r\n            </td>\r\n            <td class=\"mat-mdc-cell mdc-data-table__cell\" data-e2e=\"screen-task__session-duration\">\r\n              {{ item | map: sessionDuration | formatDuration | async }}\r\n            </td>\r\n            <td class=\"mat-mdc-cell mdc-data-table__cell\">\r\n              <button-session-actions\r\n                [session]=\"item\"\r\n                [task]=\"task\"\r\n                data-e2e=\"screen-task__button-session-action\"\r\n              ></button-session-actions>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n      <tfoot>\r\n        <tr class=\"mat-mdc-footer-row mdc-data-table__row\">\r\n          <td class=\"mat-mdc-footer-cell mdc-data-table__cell\">Total</td>\r\n          <td class=\"mat-mdc-footer-cell mdc-data-table__cell\"></td>\r\n          <td class=\"mat-mdc-footer-cell mdc-data-table__cell\" data-e2e=\"screen-task__task-duration\">\r\n            {{ task | taskDuration | formatDuration | async }}\r\n          </td>\r\n          <td class=\"mat-mdc-footer-cell mdc-data-table__cell\"></td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </cdk-virtual-scroll-viewport>\r\n  @if (taskIsInProgress() === false) {\r\n    <button (click)=\"start(task.id)\" mat-fab color=\"accent\" matTooltip=\"Start\" data-e2e=\"screen-task__button-start\">\r\n      <mat-icon svgIcon=\"play_arrow\"></mat-icon>\r\n    </button>\r\n  }\r\n  @if (taskIsInProgress() === true) {\r\n    <button (click)=\"stop(task.id)\" mat-fab color=\"primary\" matTooltip=\"Stop\" data-e2e=\"screen-task__button-stop\">\r\n      <mat-icon svgIcon=\"pause\"></mat-icon>\r\n    </button>\r\n  }\r\n}\r\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r1", "ctx_r1", "\u0275\u0275nextContext", "\u0275\u0275resetView", "edit", "\u0275\u0275text", "\u0275\u0275elementEnd", "remove", "\u0275\u0275advance", "\u0275\u0275property", "skipAfterParams", "skipBeforeParams", "ButtonSessionActionsComponent", "constructor", "store", "inject", "AppStore", "task", "input", "required", "session", "editSession", "id", "getSessionId", "deleteSession", "encodeFilterParams", "from", "Date", "start", "to", "end", "selectors", "inputs", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275element", "\u0275\u0275template", "ButtonSessionActionsComponent_ng_template_4_Template", "menu_r3", "MatMenu", "MatMenuContent", "MatMenuItem", "MatMenuTrigger", "MatIconButton", "MatIcon", "RouterLink", "styles", "changeDetection", "VirtualScrollStickyTable", "constructor", "elementRef", "inject", "ElementRef", "destroyRef", "DestroyRef", "afterNextRender", "thead", "nativeElement", "querySelector", "tfoot", "parent", "parentElement", "style", "position", "zIndex", "observer", "MutationObserver", "changes", "transform", "at", "target", "transformPx", "replace", "theadTop", "tfootBottom", "top", "bottom", "observe", "attributes", "attributeFilter", "onDestroy", "disconnect", "selectors", "standalone", "TypeSafeCdkVirtualForDirective", "constructor", "cdkVirtualForTypes", "input", "ngTemplateContextGuard", "_dir", "ctx", "selectors", "inputs", "standalone", "\u0275\u0275element", "\u0275\u0275elementContainerStart", "\u0275\u0275elementStart", "\u0275\u0275template", "ScreenTaskComponent_Conditional_0_ng_container_22_div_2_Template", "\u0275\u0275text", "\u0275\u0275elementEnd", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275pureFunction2", "_c1", "item_r1", "task_r2", "id", "\u0275\u0275textInterpolate1", "\u0275\u0275pipeBind2", "start", "end", "\u0275\u0275pipeBind1", "ctx_r2", "sessionDuration", "\u0275\u0275listener", "\u0275\u0275restoreView", "_r4", "\u0275\u0275nextContext", "\u0275\u0275resetView", "_r5", "stop", "ScreenTaskComponent_Conditional_0_ng_container_22_Template", "ScreenTaskComponent_Conditional_0_Conditional_34_Template", "ScreenTaskComponent_Conditional_0_Conditional_35_Template", "\u0275\u0275textInterpolate", "name", "\u0275\u0275pureFunction1", "_c0", "viewport_r6", "getOffsetToRenderedContentStart", "sessions", "\u0275\u0275conditional", "taskIsInProgress", "ScreenTaskComponent", "constructor", "store", "inject", "AppStore", "keys", "HotkeysService", "destroyRef", "DestroyRef", "computed", "isTaskRunning", "currentTask", "viewport", "viewChild", "CdkVirtualScrollViewport", "hotkeys", "hotkey", "KEYS_START_STOP", "e", "task", "inProgress", "KEYS_MARK_FINISHED", "updateTaskState", "TaskState", "finished", "KEYS_MARK_ACTIVE", "active", "KEYS_RENAME", "renameTask", "KEYS_DELETE_TASK", "deleteTask", "displayedColumns", "onDestroy", "remove", "afterNextRender", "add", "effect", "currentTaskId", "scrollToIndex", "taskId", "startTask", "Date", "now", "stopTask", "selectors", "viewQuery", "rf", "ctx", "ScreenTaskComponent_Conditional_0_Template", "tmp_0_0", "TaskStateIconPipe", "MatToolbarModule", "MatToolbar", "MatIcon", "MatTooltip", "FormatDurationPipe", "TaskDurationPipe", "ButtonTaskActionsComponent", "ButtonSessionActionsComponent", "MapPipe", "CdkDrag", "CdkDragPlaceholder", "CdkDropList", "AsyncPipe", "DatePipe", "RouterLink", "MatIconButton", "MatFabButton", "ScrollingModule", "CdkFixedSizeVirtualScroll", "CdkVirtualForOf", "CdkVirtualScrollableElement", "NgStyle", "VirtualScrollStickyTable", "TypeSafeCdkVirtualForDirective", "styles", "changeDetection"]
}
