{
  "version": 3,
  "sources": ["src/app/dialog-edit-session/dialog-edit-session.component.ts", "src/app/dialog-edit-session/dialog-edit-session.component.html"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component, effect, inject } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { MatButton } from '@angular/material/button';\nimport { MatDialogActions, MatDialogClose, MatDialogContent, MatDialogTitle } from '@angular/material/dialog';\nimport { MatError, MatFormField, MatLabel, MatSuffix } from '@angular/material/form-field';\nimport { MatInput } from '@angular/material/input';\nimport { ButtonResetInputComponent } from '@app/directives/button-reset-input.component';\nimport { DatetimeLocalDirective } from '@app/directives/datetime-local.directive';\nimport { AppStore } from '@app/providers/state';\nimport { option } from '@app/utils/assert';\n\n@Component({\n  selector: 'dialog-edit-session',\n  templateUrl: './dialog-edit-session.component.html',\n  styleUrl: './dialog-edit-session.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n    MatButton,\n    MatFormField,\n    MatError,\n    MatLabel,\n    MatInput,\n    MatSuffix,\n    ReactiveFormsModule,\n    DatetimeLocalDirective,\n    ButtonResetInputComponent,\n  ],\n})\nexport default class DialogEditSessionComponent {\n  private state = inject(AppStore);\n\n  form = new FormGroup<{ start: FormControl<Date | null>; end: FormControl<Date | null> }>({\n    start: new FormControl(null, {\n      validators: [Validators.required],\n      nonNullable: true,\n    }),\n    end: new FormControl(null),\n  });\n\n  private assignValues = effect(() => {\n    this.form.reset({\n      start: option(this.state.dialogSession()?.start).map((value) => new Date(value)),\n      end: option(this.state.dialogSession()?.end).map((value) => new Date(value)),\n    });\n  });\n\n  onSubmit() {\n    const { start, end } = this.form.value;\n    if (this.form.valid && start) {\n      this.state.editSession({\n        start: start.valueOf(),\n        end: end?.valueOf(),\n      });\n    }\n  }\n}\n", "<h1 mat-dialog-title>Edit session</h1>\n<form mat-dialog-content [formGroup]=\"form\" id=\"promptForm\" (ngSubmit)=\"onSubmit()\">\n  <mat-form-field>\n    <mat-label>Start</mat-label>\n    <input matInput type=\"datetime-local\" formControlName=\"start\" data-e2e=\"dialog-edit-session__input-start\" />\n    <button-reset-input-control\n      matSuffix\n      [value]=\"form.controls.start.value\"\n      (reset)=\"form.controls.start.reset()\"\n    ></button-reset-input-control>\n    @if (form.controls.start.errors?.required) {\n      <mat-error data-e2e=\"dialog-edit-session__start-validation-error\">Start is required</mat-error>\n    }\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>End</mat-label>\n    <input matInput type=\"datetime-local\" formControlName=\"end\" data-e2e=\"dialog-edit-session__input-end\" />\n    <button-reset-input-control\n      matSuffix\n      [value]=\"form.controls.end.value\"\n      (reset)=\"form.controls.end.reset()\"\n    ></button-reset-input-control>\n  </mat-form-field>\n</form>\n<div mat-dialog-actions align=\"end\">\n  <button type=\"button\" mat-button mat-dialog-close>Cancel</button>\n  <button type=\"submit\" form=\"promptForm\" mat-button data-e2e=\"dialog-edit-session__button-submit\">Save</button>\n</div>\n"],
  "mappings": "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",
  "names": ["\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "DialogEditSessionComponent", "state", "inject", "AppStore", "form", "FormGroup", "start", "FormControl", "validators", "Validators", "required", "nonNullable", "end", "assignValues", "effect", "reset", "option", "dialogSession", "map", "value", "Date", "onSubmit", "valid", "editSession", "valueOf", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "consts", "template", "rf", "ctx", "\u0275\u0275listener", "\u0275\u0275element", "controls", "\u0275\u0275template", "DialogEditSessionComponent_Conditional_8_Template", "\u0275\u0275advance", "\u0275\u0275property", "\u0275\u0275conditional", "errors", "MatDialogTitle", "MatDialogContent", "MatDialogActions", "MatDialogClose", "MatButton", "MatFormField", "MatError", "MatLabel", "MatInput", "MatSuffix", "ReactiveFormsModule", "\u0275NgNoValidate", "DefaultValueAccessor", "NgControlStatus", "NgControlStatusGroup", "FormGroupDirective", "FormControlName", "DatetimeLocalDirective", "ButtonResetInputComponent", "styles", "changeDetection"]
}
